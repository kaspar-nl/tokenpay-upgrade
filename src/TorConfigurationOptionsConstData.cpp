/**
 * Copyright (c) 2019 TokenPay
 *
 * Distributed under the MIT/X11 software license,
 * see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.
 */

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <TorConfigurationOptionsConstData.h>
#include <string>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const std::string& TorConfigurationOptionsConstData::GetOptionValueSeparator()
{
    // TODO TSB: get this from a generic Const::GetSpace()
    //
    static const std::string C_VALUE{" "};
    return C_VALUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const std::string& TorConfigurationOptionsConstData::GetEmptyOptionValue()
{
    // TODO TSB: get this from a generic Const::GetEmpty()
    //
    static const std::string C_VALUE{};
    return C_VALUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const std::string& TorConfigurationOptionsConstData::GetOptionNamePrefix()
{
    static const std::string C_VALUE{"--"};
    return C_VALUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const std::string& TorConfigurationOptionsConstData::GetFirstArgumentOptionName()
{
    static const std::string C_VALUE{"tor"};
    return C_VALUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const std::string& TorConfigurationOptionsConstData::GetLogFilePrefixOptionName()
{
    static const std::string C_VALUE{"Log"};
    return C_VALUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const std::string& TorConfigurationOptionsConstData::GetLogSeverityLevelDebugOptionName()
{
    static const std::string C_VALUE{"debug"};
    return C_VALUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const std::string& TorConfigurationOptionsConstData::GetLogSeverityLevelInformationOptionName()
{
    static const std::string C_VALUE{"info"};
    return C_VALUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const std::string& TorConfigurationOptionsConstData::GetLogSeverityLevelNoticeOptionName()
{
    static const std::string C_VALUE{"notice"};
    return C_VALUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const std::string& TorConfigurationOptionsConstData::GetLogSeverityLevelWarningOptionName()
{
    static const std::string C_VALUE{"warn"};
    return C_VALUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const std::string& TorConfigurationOptionsConstData::GetLogSeverityLevelErrorOptionName()
{
    static const std::string C_VALUE{"err"};
    return C_VALUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const std::string& TorConfigurationOptionsConstData::GetLogFileSuffixOptionName()
{
    static const std::string C_VALUE{"file"};
    return C_VALUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const std::string& TorConfigurationOptionsConstData::GetSocksPortOptionName()
{
    static const std::string C_VALUE{"SocksPort"};
    return C_VALUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const std::string& TorConfigurationOptionsConstData::GetIgnoreMissingConfigFileOptionName()
{
    static const std::string C_VALUE{"ignore-missing-torrc"};
    return C_VALUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const std::string& TorConfigurationOptionsConstData::GetDataFolderOptionName()
{
    static const std::string C_VALUE{"DataDirectory"};
    return C_VALUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const std::string& TorConfigurationOptionsConstData::GetHiddenServiceFolderOptionName()
{
    static const std::string C_VALUE{"HiddenServiceDir"};
    return C_VALUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const std::string& TorConfigurationOptionsConstData::GetHiddenServicePortOptionName()
{
    static const std::string C_VALUE{"HiddenServicePort"};
    return C_VALUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const std::string& TorConfigurationOptionsConstData::GetHiddenServiceVersionOptionName()
{
    static const std::string C_VALUE{"HiddenServiceVersion"};
    return C_VALUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const int& TorConfigurationOptionsConstData::GetMinHiddenServiceVersion()
{
    static const int C_VALUE{2};
    return C_VALUE;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const int& TorConfigurationOptionsConstData::GetMaxHiddenServiceVersion()
{
    static const int C_VALUE{3};
    return C_VALUE;
}
